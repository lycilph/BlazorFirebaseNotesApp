@page "/login"
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Services.FirebaseAuthStateProvider authStateProvider

<PageTitle>Login</PageTitle>

<h3>Login</h3>

<div class="card">
    <div class="card-body">
        <div class="form-group">
            <label>Email address</label>
            <input class="form-control" @bind="email" />
        </div>
        <div class="form-group">
            <label>Password</label>
            <input type="password" class="form-control" @bind="password" />
        </div>
        <button class="btn btn-primary mt-3" @onclick="HandleLogin">Login</button>
        <button class="btn btn-secondary mt-3" @onclick="HandleSignUp">Sign Up</button>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </div>
</div>

@code {
    private string email;
    private string password;
    private string errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = null;
        var response = await AuthService.LoginAsync(email, password);
        if (!string.IsNullOrEmpty(response?.idToken))
        {
            await localStorage.SetItemAsync("authToken", response.idToken);
            authStateProvider.NotifyUserAuthentication(response.idToken);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Login failed. Please check your credentials.";
        }
    }

    private async Task HandleSignUp()
    {
        errorMessage = null;
        var response = await AuthService.SignUpAsync(email, password);
        if (!string.IsNullOrEmpty(response?.idToken))
        {
            // Automatically log in after sign up
            await localStorage.SetItemAsync("authToken", response.idToken);
            authStateProvider.NotifyUserAuthentication(response.idToken);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Sign up failed. The email may already be in use.";
        }
    }
}